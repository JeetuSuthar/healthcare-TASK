// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://neondb_owner:npg_QN8AGnKCi9kE@ep-delicate-bonus-advofx1k-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require"
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  firstName String
  lastName  String
  role      Role
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  shifts              Shift[]
  createdPerimeters   LocationPerimeter[]

  @@map("User")
}

model Shift {
  id               String    @id @default(cuid())
  userId           String
  clockInTime      DateTime
  clockOutTime     DateTime?
  clockInLatitude  Float
  clockInLongitude Float
  clockOutLatitude Float?
  clockOutLongitude Float?
  clockInNote      String?
  clockOutNote     String?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("Shift")
}

model LocationPerimeter {
  id        String   @id @default(cuid())
  name      String
  latitude  Float
  longitude Float
  radius    Int      // in meters
  isActive  Boolean  @default(true)
  createdBy String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  creator User @relation(fields: [createdBy], references: [id], onDelete: Cascade)

  @@map("LocationPerimeter")
}

enum Role {
  WORKER
  MANAGER
}
